// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Products.DatabaseAccess;

#nullable disable

namespace Products.DatabaseAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Products.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDateTime = new DateTime(2023, 11, 12, 15, 7, 31, 781, DateTimeKind.Local).AddTicks(3465),
                            DisplayOrder = 1,
                            Name = "Tech"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDateTime = new DateTime(2023, 11, 12, 15, 7, 31, 781, DateTimeKind.Local).AddTicks(3479),
                            DisplayOrder = 2,
                            Name = "wood"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDateTime = new DateTime(2023, 11, 12, 15, 7, 31, 781, DateTimeKind.Local).AddTicks(3481),
                            DisplayOrder = 3,
                            Name = "interior"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDateTime = new DateTime(2023, 11, 12, 15, 7, 31, 781, DateTimeKind.Local).AddTicks(3482),
                            DisplayOrder = 4,
                            Name = "extrior"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
